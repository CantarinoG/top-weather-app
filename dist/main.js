(()=>{"use strict";var n={426:(n,r,t)=>{t.d(r,{Z:()=>p});var e=t(537),o=t.n(e),i=t(645),a=t.n(i),c=t(667),s=t.n(c),A=new URL(t(427),t.b),d=a()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]);var l=s()(A);d.push([n.id,":root {\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: var(--roboto);\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: 1s;\r\n    position: relative;\r\n    background-image: url("+l+');\r\n    color: white;\r\n}\r\n\r\n\r\n#data-display {\r\n    flex: 5;\r\n}\r\n\r\n.icon {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\nform {\r\n    margin-left: 3%;\r\n    margin-right: 3%;\r\n    border-bottom: 2px solid white;\r\n    display: flex;\r\n}\r\n\r\nform button {\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 1;\r\n    cursor: pointer;\r\n}\r\n\r\ninput[type="search"]{\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 10;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n    color: white;\r\n}\r\n\r\ninput[type="search"]::placeholder { \r\n    color: white;\r\n    opacity: 1; \r\n  }\r\n\r\nimg {\r\n    filter: invert(100%) sepia(100%) saturate(13%) hue-rotate(218deg) brightness(104%) contrast(104%);\r\n}\r\n\r\ninput[type="search"]:focus {\r\n    outline: none;\r\n}\r\n\r\nmain {\r\n    flex: 5;\r\n    margin: min(10%, 50px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 12px;\r\n}\r\n\r\nh1 {\r\n    font-size: x-large;\r\n    text-align: center;\r\n}\r\n\r\nh2 {\r\n    font-size: larger;\r\n    text-align: center;\r\n}\r\n\r\n#temp {\r\n    font-size: xx-large;\r\n}\r\n\r\n#data-display {\r\n    flex: 5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: min(10vw, 50px);\r\n}\r\n\r\n#main-img {\r\n    width: min(100%, 260px);\r\n    height: min(100%, 260px);\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 3%;\r\n}\r\n\r\n.card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 4px;\r\n    padding: 6px;\r\n}\r\n\r\n.upper-card {\r\n    font-size: x-small;\r\n}\r\n\r\n.lower-card {\r\n    text-align: center;\r\n}\r\n\r\n@media only screen and (min-width: 650px){\r\n    \r\n    #data-display {\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n    }\r\n\r\n    .row {\r\n        flex-wrap: nowrap;\r\n        justify-content: space-around;\r\n        align-content: flex-start;\r\n    }\r\n\r\n    .upper-card {\r\n        font-size: small;\r\n    }\r\n\r\n    .lower-card {\r\n        font-size: larger;\r\n    }\r\n\r\n    .card {\r\n        flex: 1;\r\n    }\r\n\r\n}\r\n\r\n/*Switch code by: https://uiverse.io/victoryamaykin/funny-rabbit-33*/\r\n\r\n.switch {\r\n    position: absolute;\r\n    display: inline-block;\r\n    width: 120px;\r\n    height: 34px;\r\n    right: 10px;\r\n    bottom: 10px;\r\n   }\r\n   \r\n   .switch input {\r\n    display: none;\r\n   }\r\n   \r\n   .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #3C3C3C;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 34px;\r\n   }\r\n   \r\n   .slider:before {\r\n    position: absolute;\r\n    content: "";\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 50%;\r\n   }\r\n   \r\n   input:checked + .slider {\r\n    background-color: #454545;\r\n   }\r\n   \r\n   input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196F3;\r\n   }\r\n   \r\n   input:checked + .slider:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(85px);\r\n   }\r\n   \r\n   .slider:after {\r\n    content: \'°C\';\r\n    color: white;\r\n    display: block;\r\n    position: absolute;\r\n    transform: translate(-50%,-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    font-size: 10px;\r\n    font-family: Verdana, sans-serif;\r\n   }\r\n   \r\n   input:checked + .slider:after {\r\n    content: \'°F\';\r\n   }\r\n\r\n\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,kBAAkB;IAClB,yDAAyC;IACzC,YAAY;AAChB;;;AAGA;IACI,OAAO;AACX;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,8BAA8B;IAC9B,aAAa;AACjB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,OAAO;IACP,eAAe;AACnB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,QAAQ;IACR,kBAAkB;IAClB,0BAA0B;IAC1B,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,UAAU;EACZ;;AAEF;IACI,iGAAiG;AACrG;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;IACP,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,sBAAsB;IACtB,oBAAoB;AACxB;;AAEA;IACI,uBAAuB;IACvB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,OAAO;AACX;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI;QACI,mBAAmB;QACnB,6BAA6B;QAC7B,mBAAmB;IACvB;;IAEA;QACI,iBAAiB;QACjB,6BAA6B;QAC7B,yBAAyB;IAC7B;;IAEA;QACI,gBAAgB;IACpB;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI,OAAO;IACX;;AAEJ;;AAEA,oEAAoE;;AAEpE;IACI,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,YAAY;GACb;;GAEA;IACC,aAAa;GACd;;GAEA;IACC,kBAAkB;IAClB,eAAe;IACf,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,yBAAyB;IACzB,uBAAuB;IACvB,eAAe;IACf,mBAAmB;GACpB;;GAEA;IACC,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,WAAW;IACX,SAAS;IACT,WAAW;IACX,uBAAuB;IACvB,uBAAuB;IACvB,eAAe;IACf,kBAAkB;GACnB;;GAEA;IACC,yBAAyB;GAC1B;;GAEA;IACC,2BAA2B;GAC5B;;GAEA;IACC,mCAAmC;IACnC,+BAA+B;IAC/B,2BAA2B;GAC5B;;GAEA;IACC,aAAa;IACb,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,+BAA+B;IAC/B,QAAQ;IACR,SAAS;IACT,eAAe;IACf,gCAAgC;GACjC;;GAEA;IACC,aAAa;GACd",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Roboto&display=swap\');\r\n\r\n:root {\r\n    --roboto: \'Roboto\', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: var(--roboto);\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: 1s;\r\n    position: relative;\r\n    background-image: url("./imgs/sunny.jpg");\r\n    color: white;\r\n}\r\n\r\n\r\n#data-display {\r\n    flex: 5;\r\n}\r\n\r\n.icon {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\nform {\r\n    margin-left: 3%;\r\n    margin-right: 3%;\r\n    border-bottom: 2px solid white;\r\n    display: flex;\r\n}\r\n\r\nform button {\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 1;\r\n    cursor: pointer;\r\n}\r\n\r\ninput[type="search"]{\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 10;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n    color: white;\r\n}\r\n\r\ninput[type="search"]::placeholder { \r\n    color: white;\r\n    opacity: 1; \r\n  }\r\n\r\nimg {\r\n    filter: invert(100%) sepia(100%) saturate(13%) hue-rotate(218deg) brightness(104%) contrast(104%);\r\n}\r\n\r\ninput[type="search"]:focus {\r\n    outline: none;\r\n}\r\n\r\nmain {\r\n    flex: 5;\r\n    margin: min(10%, 50px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 12px;\r\n}\r\n\r\nh1 {\r\n    font-size: x-large;\r\n    text-align: center;\r\n}\r\n\r\nh2 {\r\n    font-size: larger;\r\n    text-align: center;\r\n}\r\n\r\n#temp {\r\n    font-size: xx-large;\r\n}\r\n\r\n#data-display {\r\n    flex: 5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: min(10vw, 50px);\r\n}\r\n\r\n#main-img {\r\n    width: min(100%, 260px);\r\n    height: min(100%, 260px);\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 3%;\r\n}\r\n\r\n.card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 4px;\r\n    padding: 6px;\r\n}\r\n\r\n.upper-card {\r\n    font-size: x-small;\r\n}\r\n\r\n.lower-card {\r\n    text-align: center;\r\n}\r\n\r\n@media only screen and (min-width: 650px){\r\n    \r\n    #data-display {\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n    }\r\n\r\n    .row {\r\n        flex-wrap: nowrap;\r\n        justify-content: space-around;\r\n        align-content: flex-start;\r\n    }\r\n\r\n    .upper-card {\r\n        font-size: small;\r\n    }\r\n\r\n    .lower-card {\r\n        font-size: larger;\r\n    }\r\n\r\n    .card {\r\n        flex: 1;\r\n    }\r\n\r\n}\r\n\r\n/*Switch code by: https://uiverse.io/victoryamaykin/funny-rabbit-33*/\r\n\r\n.switch {\r\n    position: absolute;\r\n    display: inline-block;\r\n    width: 120px;\r\n    height: 34px;\r\n    right: 10px;\r\n    bottom: 10px;\r\n   }\r\n   \r\n   .switch input {\r\n    display: none;\r\n   }\r\n   \r\n   .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #3C3C3C;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 34px;\r\n   }\r\n   \r\n   .slider:before {\r\n    position: absolute;\r\n    content: "";\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 50%;\r\n   }\r\n   \r\n   input:checked + .slider {\r\n    background-color: #454545;\r\n   }\r\n   \r\n   input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196F3;\r\n   }\r\n   \r\n   input:checked + .slider:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(85px);\r\n   }\r\n   \r\n   .slider:after {\r\n    content: \'°C\';\r\n    color: white;\r\n    display: block;\r\n    position: absolute;\r\n    transform: translate(-50%,-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    font-size: 10px;\r\n    font-family: Verdana, sans-serif;\r\n   }\r\n   \r\n   input:checked + .slider:after {\r\n    content: \'°F\';\r\n   }\r\n\r\n\r\n'],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t="",e=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),e&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=n(r),e&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(n,t,e,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(e)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);e&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],t=n[3];if(!t)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),i="/*# ".concat(o," */");return[r].concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function t(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function e(n,e){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=e.base?s[0]+e.base:s[0],d=i[A]||0,l="".concat(A," ").concat(d);i[A]=d+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var h=o(u,e);e.byIndex=c,r.splice(c,0,{identifier:l,updater:h,references:1})}a.push(l)}return a}function o(n,r){var t=r.domAPI(r);return t.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;t.update(n=r)}else t.remove()}}n.exports=function(n,o){var i=e(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);r[c].references--}for(var s=e(n,o),A=0;A<i.length;A++){var d=t(i[A]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}i=s}}},569:n=>{var r={};n.exports=function(n,t){var e=function(n){if(void 0===r[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,t)=>{n.exports=function(n){var r=t.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(t){!function(n,r,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(e,n,r.options)}(r,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},427:(n,r,t)=>{n.exports=t.p+"1cc5e65cceced431eefc.jpg"}},r={};function t(e){var o=r[e];if(void 0!==o)return o.exports;var i=r[e]={id:e,exports:{}};return n[e](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return t.d(r,{a:r}),r},t.d=(n,r)=>{for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var r=t.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var e=r.getElementsByTagName("script");e.length&&(n=e[e.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),r=t.n(n),e=t(795),o=t.n(e),i=t(569),a=t.n(i),c=t(565),s=t.n(c),A=t(216),d=t.n(A),l=t(589),p=t.n(l),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),r()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;const f=t.p+"56982c1a4d1ef20556e0.svg",C=t.p+"2bf239bdf87133ff8676.svg";function m(n){return Math.round(1.8*n+32)}function v(n){return Math.round((n-32)/1.8)}const y=t.p+"6e4ab494b243bcc96356.svg",b=t.p+"d01a186be2b03c84b37c.svg",B=t.p+"f37cb9676eebe41866f9.svg";var x=t(427);const g=t.p+"ef866e668c0eb591e5ac.jpg",I=t.p+"0742758d3d1337b17ef2.jpg",w=t.p+"bc905193ce07f86e076c.jpg";function k(n){const r=document.querySelector("#temp"),t=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(1) > div.lower-card"),e=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(2) > div.lower-card"),o=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(3) > div.lower-card");if(n){let n=+r.textContent.replace("°C",""),i=+t.textContent.replace("°C",""),a=+e.textContent.replace("°C",""),c=+o.textContent.replace("°C","");if(isNaN(n)||isNaN(i)||isNaN(a)||isNaN(c))return;n=m(n),i=m(i),a=m(a),c=m(c),r.textContent=`${n}°F`,t.textContent=`${i}°F`,e.textContent=`${a}°F`,o.textContent=`${c}°F`}else{let n=+r.textContent.replace("°F",""),i=+t.textContent.replace("°F",""),a=+e.textContent.replace("°F",""),c=+o.textContent.replace("°F","");if(isNaN(n)||isNaN(i)||isNaN(a)||isNaN(c))return;n=v(n),i=v(i),a=v(a),c=v(c),r.textContent=`${n}°C`,t.textContent=`${i}°C`,e.textContent=`${a}°C`,o.textContent=`${c}°C`}}document.querySelector("body").innerHTML=`\n  <header>\n    <form action>\n    <input type="search" name="search" placeholder="Search for a city...">\n    <button type="submit"><img class="icon" src="${f}" alt="Search Icon"></button>\n    </form>\n  </header>\n  <main>\n    <h1>SELECT A CITY</h1>\n    <h2>Lon:- Lat:- </h2> \n    <img id="main-img" src="${C}" alt="Clear Icon">\n    <h1 id="temp">-</h1>\n    <h1>-</h1>\n    <h2>-</h2>\n  </main>\n  <div id="data-display">\n    <div class="row">\n      <div class="card">\n        <div class="upper-card">Feels Like</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Min Temp</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Max Temp</div>\n        <div class="lower-card">-</div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="card">\n        <div class="upper-card">Cloudiness</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Wind Speed</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Visibility</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Humidity</div>\n        <div class="lower-card">-</div>\n      </div>\n    </div>\n  </div>\n\n<label class="switch">\n  <input type="checkbox">\n  <span class="slider"></span>\n</label>\n  `;const E=document.querySelector("body > label > input[type=checkbox]");document.querySelector("body > header > form").addEventListener("submit",(n=>{n.preventDefault(),async function(n){const r=function(n){return`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=20f7632ffc2c022654e4093c6947b4f4&units=metric`}(n),t=await fetch(r);return t.ok?await t.json():(alert("Something went wrong with your request. Please try again."),null)}(function(n){let r=document.querySelector('input[type="search"]').value.trim();return r=r.replace(/\s/g,"+"),r}()).then((n=>{!function(n){const r=document.querySelector("body > main > h1:nth-child(1)"),t=document.querySelector("body > main > h2:nth-child(2)"),e=document.querySelector("#main-img"),o=document.querySelector("#temp"),i=document.querySelector("body > main > h1:nth-child(5)"),a=document.querySelector("body > main > h2:nth-child(6)"),c=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(1) > div.lower-card"),s=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(2) > div.lower-card"),A=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(3) > div.lower-card"),d=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(1) > div.lower-card"),l=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(2) > div.lower-card"),p=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(3) > div.lower-card"),u=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(4) > div.lower-card");r.textContent=`${n.name} - ${n.sys.country}`,t.textContent=`Lon: ${n.coord.lon}° Lat: ${n.coord.lat}°`;const h=n.weather[0].id.toString();800==h?(e.src=C,document.body.style.backgroundImage=`url('${x}')`):h.startsWith("6")?(e.src=B,document.body.style.backgroundImage=`url('${w}')`):h.startsWith("2")||h.startsWith("3")||h.startsWith("5")?(e.src=b,document.body.style.backgroundImage=`url('${g}')`):h.startsWith("7")||h.startsWith("80")?(e.src=y,document.body.style.backgroundImage=`url('${I}')`):alert("Something went wrong. Please try again."),o.textContent=`${Math.round(n.main.temp)}°C`,i.textContent=n.weather[0].main,a.textContent=n.weather[0].description,c.textContent=`${Math.round(n.main.feels_like)}°C`,s.textContent=`${Math.round(n.main.temp_min)}°C`,A.textContent=`${Math.round(n.main.temp_max)}°C`,d.textContent=`${n.clouds.all}%`,l.textContent=`${n.wind.speed}m/sec`,p.textContent=`${n.visibility}m`,u.textContent=`${n.main.humidity}%`}(n),k(E.checked)}),(n=>alert("Error:",n)))})),E.addEventListener("change",(()=>{k(E.checked)})),function(){const n=document.querySelector("head"),r=document.createElement("link");r.setAttribute("rel","shortcut icon"),r.setAttribute("href",C),n.appendChild(r)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,