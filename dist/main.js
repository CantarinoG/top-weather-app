(()=>{"use strict";var n={426:(n,r,t)=>{t.d(r,{Z:()=>c});var e=t(537),o=t.n(e),i=t(645),a=t.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),a.push([n.id,":root {\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: var(--roboto);\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: 1s;\r\n    position: relative;\r\n}\r\n\r\n\r\n#data-display {\r\n    flex: 5;\r\n}\r\n\r\n.icon {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\nform {\r\n    margin-left: 3%;\r\n    margin-right: 3%;\r\n    border-bottom: 2px solid black;\r\n    display: flex;\r\n}\r\n\r\nform button {\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 1;\r\n    cursor: pointer;\r\n}\r\n\r\ninput[type=\"search\"]{\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 10;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n}\r\n\r\ninput[type=\"search\"]:focus {\r\n    outline: none;\r\n}\r\n\r\nmain {\r\n    flex: 5;\r\n    margin: min(10%, 50px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 12px;\r\n}\r\n\r\nh1 {\r\n    font-size: x-large;\r\n    text-align: center;\r\n}\r\n\r\nh2 {\r\n    font-size: larger;\r\n    text-align: center;\r\n}\r\n\r\n#temp {\r\n    font-size: xx-large;\r\n}\r\n\r\n#data-display {\r\n    flex: 5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: min(10vw, 50px);\r\n}\r\n\r\n#main-img {\r\n    width: min(100%, 260px);\r\n    height: min(100%, 260px);\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 3%;\r\n}\r\n\r\n.card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 4px;\r\n    padding: 6px;\r\n}\r\n\r\n.upper-card {\r\n    font-size: x-small;\r\n}\r\n\r\n.lower-card {\r\n    text-align: center;\r\n}\r\n\r\nmain, .card {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    border-radius: 12px;\r\n}\r\n\r\n@media only screen and (min-width: 650px){\r\n    \r\n    #data-display {\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n    }\r\n\r\n    .row {\r\n        flex-wrap: nowrap;\r\n        justify-content: space-around;\r\n        align-content: flex-start;\r\n    }\r\n\r\n    .upper-card {\r\n        font-size: small;\r\n    }\r\n\r\n    .lower-card {\r\n        font-size: larger;\r\n    }\r\n\r\n    .card {\r\n        flex: 1;\r\n    }\r\n\r\n}\r\n\r\n/*Switch code by: https://uiverse.io/victoryamaykin/funny-rabbit-33*/\r\n\r\n.switch {\r\n    position: absolute;\r\n    display: inline-block;\r\n    width: 120px;\r\n    height: 34px;\r\n    right: 10px;\r\n    bottom: 10px;\r\n   }\r\n   \r\n   .switch input {\r\n    display: none;\r\n   }\r\n   \r\n   .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #3C3C3C;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 34px;\r\n   }\r\n   \r\n   .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 50%;\r\n   }\r\n   \r\n   input:checked + .slider {\r\n    background-color: #454545;\r\n   }\r\n   \r\n   input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196F3;\r\n   }\r\n   \r\n   input:checked + .slider:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(85px);\r\n   }\r\n   \r\n   .slider:after {\r\n    content: '째C';\r\n    color: white;\r\n    display: block;\r\n    position: absolute;\r\n    transform: translate(-50%,-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    font-size: 10px;\r\n    font-family: Verdana, sans-serif;\r\n   }\r\n   \r\n   input:checked + .slider:after {\r\n    content: '째F';\r\n   }\r\n\r\n\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,kBAAkB;AACtB;;;AAGA;IACI,OAAO;AACX;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,8BAA8B;IAC9B,aAAa;AACjB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,OAAO;IACP,eAAe;AACnB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,QAAQ;IACR,kBAAkB;IAClB,0BAA0B;AAC9B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;IACP,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,sBAAsB;IACtB,oBAAoB;AACxB;;AAEA;IACI,uBAAuB;IACvB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,OAAO;AACX;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;IAC1C,mBAAmB;AACvB;;AAEA;;IAEI;QACI,mBAAmB;QACnB,6BAA6B;QAC7B,mBAAmB;IACvB;;IAEA;QACI,iBAAiB;QACjB,6BAA6B;QAC7B,yBAAyB;IAC7B;;IAEA;QACI,gBAAgB;IACpB;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI,OAAO;IACX;;AAEJ;;AAEA,oEAAoE;;AAEpE;IACI,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,YAAY;GACb;;GAEA;IACC,aAAa;GACd;;GAEA;IACC,kBAAkB;IAClB,eAAe;IACf,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,yBAAyB;IACzB,uBAAuB;IACvB,eAAe;IACf,mBAAmB;GACpB;;GAEA;IACC,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,WAAW;IACX,SAAS;IACT,WAAW;IACX,uBAAuB;IACvB,uBAAuB;IACvB,eAAe;IACf,kBAAkB;GACnB;;GAEA;IACC,yBAAyB;GAC1B;;GAEA;IACC,2BAA2B;GAC5B;;GAEA;IACC,mCAAmC;IACnC,+BAA+B;IAC/B,2BAA2B;GAC5B;;GAEA;IACC,aAAa;IACb,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,+BAA+B;IAC/B,QAAQ;IACR,SAAS;IACT,eAAe;IACf,gCAAgC;GACjC;;GAEA;IACC,aAAa;GACd",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n\r\n:root {\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: var(--roboto);\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: 1s;\r\n    position: relative;\r\n}\r\n\r\n\r\n#data-display {\r\n    flex: 5;\r\n}\r\n\r\n.icon {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\nform {\r\n    margin-left: 3%;\r\n    margin-right: 3%;\r\n    border-bottom: 2px solid black;\r\n    display: flex;\r\n}\r\n\r\nform button {\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 1;\r\n    cursor: pointer;\r\n}\r\n\r\ninput[type=\"search\"]{\r\n    background-color: transparent;\r\n    border: none;\r\n    flex: 10;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n}\r\n\r\ninput[type=\"search\"]:focus {\r\n    outline: none;\r\n}\r\n\r\nmain {\r\n    flex: 5;\r\n    margin: min(10%, 50px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 12px;\r\n}\r\n\r\nh1 {\r\n    font-size: x-large;\r\n    text-align: center;\r\n}\r\n\r\nh2 {\r\n    font-size: larger;\r\n    text-align: center;\r\n}\r\n\r\n#temp {\r\n    font-size: xx-large;\r\n}\r\n\r\n#data-display {\r\n    flex: 5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: min(10vw, 50px);\r\n}\r\n\r\n#main-img {\r\n    width: min(100%, 260px);\r\n    height: min(100%, 260px);\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 3%;\r\n}\r\n\r\n.card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 4px;\r\n    padding: 6px;\r\n}\r\n\r\n.upper-card {\r\n    font-size: x-small;\r\n}\r\n\r\n.lower-card {\r\n    text-align: center;\r\n}\r\n\r\nmain, .card {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    border-radius: 12px;\r\n}\r\n\r\n@media only screen and (min-width: 650px){\r\n    \r\n    #data-display {\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n    }\r\n\r\n    .row {\r\n        flex-wrap: nowrap;\r\n        justify-content: space-around;\r\n        align-content: flex-start;\r\n    }\r\n\r\n    .upper-card {\r\n        font-size: small;\r\n    }\r\n\r\n    .lower-card {\r\n        font-size: larger;\r\n    }\r\n\r\n    .card {\r\n        flex: 1;\r\n    }\r\n\r\n}\r\n\r\n/*Switch code by: https://uiverse.io/victoryamaykin/funny-rabbit-33*/\r\n\r\n.switch {\r\n    position: absolute;\r\n    display: inline-block;\r\n    width: 120px;\r\n    height: 34px;\r\n    right: 10px;\r\n    bottom: 10px;\r\n   }\r\n   \r\n   .switch input {\r\n    display: none;\r\n   }\r\n   \r\n   .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #3C3C3C;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 34px;\r\n   }\r\n   \r\n   .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 50%;\r\n   }\r\n   \r\n   input:checked + .slider {\r\n    background-color: #454545;\r\n   }\r\n   \r\n   input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196F3;\r\n   }\r\n   \r\n   input:checked + .slider:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(85px);\r\n   }\r\n   \r\n   .slider:after {\r\n    content: '째C';\r\n    color: white;\r\n    display: block;\r\n    position: absolute;\r\n    transform: translate(-50%,-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    font-size: 10px;\r\n    font-family: Verdana, sans-serif;\r\n   }\r\n   \r\n   input:checked + .slider:after {\r\n    content: '째F';\r\n   }\r\n\r\n\r\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t="",e=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),e&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=n(r),e&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(n,t,e,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(e)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);e&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],t=n[3];if(!t)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),i="/*# ".concat(o," */");return[r].concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function t(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function e(n,e){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=e.base?s[0]+e.base:s[0],d=i[A]||0,l="".concat(A," ").concat(d);i[A]=d+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var C=o(u,e);e.byIndex=c,r.splice(c,0,{identifier:l,updater:C,references:1})}a.push(l)}return a}function o(n,r){var t=r.domAPI(r);return t.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;t.update(n=r)}else t.remove()}}n.exports=function(n,o){var i=e(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);r[c].references--}for(var s=e(n,o),A=0;A<i.length;A++){var d=t(i[A]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}i=s}}},569:n=>{var r={};n.exports=function(n,t){var e=function(n){if(void 0===r[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,t)=>{n.exports=function(n){var r=t.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(t){!function(n,r,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(e,n,r.options)}(r,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function t(e){var o=r[e];if(void 0!==o)return o.exports;var i=r[e]={id:e,exports:{}};return n[e](i,i.exports,t),i.exports}t.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return t.d(r,{a:r}),r},t.d=(n,r)=>{for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var r=t.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var e=r.getElementsByTagName("script");e.length&&(n=e[e.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),r=t.n(n),e=t(795),o=t.n(e),i=t(569),a=t.n(i),c=t(565),s=t.n(c),A=t(216),d=t.n(A),l=t(589),p=t.n(l),u=t(426),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=a().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=d(),r()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;const f=t.p+"56982c1a4d1ef20556e0.svg",h=t.p+"2bf239bdf87133ff8676.svg";function m(n){return Math.round(1.8*n+32)}function b(n){return Math.round((n-32)/1.8)}const v=t.p+"6e4ab494b243bcc96356.svg",B=t.p+"d01a186be2b03c84b37c.svg",x=t.p+"f37cb9676eebe41866f9.svg";function y(n){const r=document.querySelector("#temp"),t=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(1) > div.lower-card"),e=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(2) > div.lower-card"),o=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(3) > div.lower-card");if(n){let n=+r.textContent.replace("째C",""),i=+t.textContent.replace("째C",""),a=+e.textContent.replace("째C",""),c=+o.textContent.replace("째C","");if(isNaN(n)||isNaN(i)||isNaN(a)||isNaN(c))return;n=m(n),i=m(i),a=m(a),c=m(c),r.textContent=`${n}째F`,t.textContent=`${i}째F`,e.textContent=`${a}째F`,o.textContent=`${c}째F`}else{console.log("aaa");let n=+r.textContent.replace("째F",""),i=+t.textContent.replace("째F",""),a=+e.textContent.replace("째F",""),c=+o.textContent.replace("째F","");if(console.log("aaa"),isNaN(n)||isNaN(i)||isNaN(a)||isNaN(c))return;n=b(n),i=b(i),a=b(a),c=b(c),r.textContent=`${n}째C`,t.textContent=`${i}째C`,e.textContent=`${a}째C`,o.textContent=`${c}째C`}}document.querySelector("body").innerHTML=`\n  <header>\n    <form action>\n    <input type="search" name="search" placeholder="Search for a city...">\n    <button type="submit"><img class="icon" src="${f}" alt="Search Icon"></button>\n    </form>\n  </header>\n  <main>\n    <h1>SELECT A CITY</h1>\n    <h2>Lon:- Lat:- </h2> \n    <img id="main-img" src="${h}" alt="Clear Icon">\n    <h1 id="temp">-</h1>\n    <h1>-</h1>\n    <h2>-</h2>\n  </main>\n  <div id="data-display">\n    <div class="row">\n      <div class="card">\n        <div class="upper-card">Feels Like</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Min Temp</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Max Temp</div>\n        <div class="lower-card">-</div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="card">\n        <div class="upper-card">Cloudiness</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Wind Speed</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Visibility</div>\n        <div class="lower-card">-</div>\n      </div>\n      <div class="card">\n        <div class="upper-card">Humidity</div>\n        <div class="lower-card">-</div>\n      </div>\n    </div>\n  </div>\n\n<label class="switch">\n  <input type="checkbox">\n  <span class="slider"></span>\n</label>\n  `,document.querySelector("body > header > form").addEventListener("submit",(n=>{n.preventDefault(),async function(n){const r=function(n){return`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=20f7632ffc2c022654e4093c6947b4f4&units=metric`}(n),t=await fetch(r);return t.ok?await t.json():(alert("Something went wrong with your request. Please try again."),null)}(function(n){let r=document.querySelector('input[type="search"]').value.trim();return r=r.replace(/\s/g,"+"),r}()).then((n=>{!function(n){document.querySelector("body");const r=document.querySelector("body > main > h1:nth-child(1)"),t=document.querySelector("body > main > h2:nth-child(2)"),e=document.querySelector("#main-img"),o=document.querySelector("#temp"),i=document.querySelector("body > main > h1:nth-child(5)"),a=document.querySelector("body > main > h2:nth-child(6)"),c=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(1) > div.lower-card"),s=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(2) > div.lower-card"),A=document.querySelector("#data-display > div:nth-child(1) > div:nth-child(3) > div.lower-card"),d=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(1) > div.lower-card"),l=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(2) > div.lower-card"),p=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(3) > div.lower-card"),u=document.querySelector("#data-display > div:nth-child(2) > div:nth-child(4) > div.lower-card");r.textContent=`${n.name} - ${n.sys.country}`,t.textContent=`Lon: ${n.coord.lon}째 Lat: ${n.coord.lat}째`;let C=n.weather[0].id.toString();800==C?(e.src=h,document.body.style.backgroundColor="rgb(216, 233, 141)"):C.startsWith("6")?(e.src=x,document.body.style.backgroundColor="rgb(238, 238, 238)"):C.startsWith("2")||C.startsWith("3")||C.startsWith("5")?(e.src=B,document.body.style.backgroundColor="rgb(42, 37, 66)"):C.startsWith("7")||C.startsWith("80")?(e.src=v,document.body.style.backgroundColor="rgb(152, 150, 166)"):alert("Something went wrong. Please try again."),o.textContent=`${Math.round(n.main.temp)}째C`,i.textContent=n.weather[0].main,a.textContent=n.weather[0].description,c.textContent=`${Math.round(n.main.feels_like)}째C`,s.textContent=`${Math.round(n.main.temp_min)}째C`,A.textContent=`${Math.round(n.main.temp_max)}째C`,d.textContent=`${n.clouds.all}%`,l.textContent=`${n.wind.speed}m/sec`,p.textContent=`${n.visibility}m`,u.textContent=`${n.main.humidity}%`}(n),y(I.checked)}),(n=>console.log("Error:",n)))}));const I=document.querySelector("body > label > input[type=checkbox]");I.addEventListener("change",(n=>{console.log(I.checked),y(I.checked)})),function(){let n=document.querySelector("head"),r=document.createElement("link");r.setAttribute("rel","shortcut icon"),r.setAttribute("href",h),n.appendChild(r)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MEIsRUFBWVEsY0FDeENDLEVBQVNuQyxZQUFjLEdBQUcwQixFQUFZb0IsS0FBS1gsV0FDL0MsQ0U3Q0lvQixDQUFVOUIsR0FDVmhDLEVBQVkrRCxFQUFhQyxRQUFRLElBQ2hDQyxHQUFVckQsUUFBUUMsSUFBSSxTQUFVb0QsSUFBUSxJQUc3QyxNQUFNRixFQUFlbEksU0FBU0MsY0FBYyx1Q0FFNUNpSSxFQUFhaEQsaUJBQWlCLFVBQVc1RSxJQUN2Q3lFLFFBQVFDLElBQUlrRCxFQUFhQyxTQUN6QmhFLEVBQVkrRCxFQUFhQyxRQUFRLElGbUY1QixXQUNILElBQUlFLEVBQVlySSxTQUFTQyxjQUFjLFFBQ25DcUksRUFBYXRJLFNBQVNXLGNBQWMsUUFDeEMySCxFQUFXdEgsYUFBYSxNQUFNLGlCQUM5QnNILEVBQVd0SCxhQUFhLE9BQVEsR0FDaENxSCxFQUFVNUgsWUFBWTZILEVBQzFCLENFdEZBQSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9zcmMvc2NyaXB0cy9oZWxwZXIuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjL3NjcmlwdHMvRE9NTWFuaXB1bGF0aW9uLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL1VJLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9zcmMvc2NyaXB0cy9BUEkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcclxcbiAgICAtLXJvYm90bzogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxyXFxufVxcclxcblxcclxcbioge1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgICBmb250LWZhbWlseTogdmFyKC0tcm9ib3RvKTtcXHJcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgdHJhbnNpdGlvbjogMXM7XFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuI2RhdGEtZGlzcGxheSB7XFxyXFxuICAgIGZsZXg6IDU7XFxyXFxufVxcclxcblxcclxcbi5pY29uIHtcXHJcXG4gICAgaGVpZ2h0OiAyMHB4O1xcclxcbiAgICB3aWR0aDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuZm9ybSB7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAzJTtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiAzJTtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGJsYWNrO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbn1cXHJcXG5cXHJcXG5mb3JtIGJ1dHRvbiB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgICBib3JkZXI6IG5vbmU7XFxyXFxuICAgIGZsZXg6IDE7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXRbdHlwZT1cXFwic2VhcmNoXFxcIl17XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgICBib3JkZXI6IG5vbmU7XFxyXFxuICAgIGZsZXg6IDEwO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1yb2JvdG8pO1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dFt0eXBlPVxcXCJzZWFyY2hcXFwiXTpmb2N1cyB7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbm1haW4ge1xcclxcbiAgICBmbGV4OiA1O1xcclxcbiAgICBtYXJnaW46IG1pbigxMCUsIDUwcHgpO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG5oMSB7XFxyXFxuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG5oMiB7XFxyXFxuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbiN0ZW1wIHtcXHJcXG4gICAgZm9udC1zaXplOiB4eC1sYXJnZTtcXHJcXG59XFxyXFxuXFxyXFxuI2RhdGEtZGlzcGxheSB7XFxyXFxuICAgIGZsZXg6IDU7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGdhcDogbWluKDEwdncsIDUwcHgpO1xcclxcbn1cXHJcXG5cXHJcXG4jbWFpbi1pbWcge1xcclxcbiAgICB3aWR0aDogbWluKDEwMCUsIDI2MHB4KTtcXHJcXG4gICAgaGVpZ2h0OiBtaW4oMTAwJSwgMjYwcHgpO1xcclxcbn1cXHJcXG5cXHJcXG4ucm93IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXHJcXG4gICAgZ2FwOiAzJTtcXHJcXG59XFxyXFxuXFxyXFxuLmNhcmQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxyXFxuICAgIHBhZGRpbmc6IDZweDtcXHJcXG59XFxyXFxuXFxyXFxuLnVwcGVyLWNhcmQge1xcclxcbiAgICBmb250LXNpemU6IHgtc21hbGw7XFxyXFxufVxcclxcblxcclxcbi5sb3dlci1jYXJkIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluLCAuY2FyZCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcXHJcXG59XFxyXFxuXFxyXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NTBweCl7XFxyXFxuICAgIFxcclxcbiAgICAjZGF0YS1kaXNwbGF5IHtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgLnJvdyB7XFxyXFxuICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcXHJcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICAgICAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAudXBwZXItY2FyZCB7XFxyXFxuICAgICAgICBmb250LXNpemU6IHNtYWxsO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5sb3dlci1jYXJkIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5jYXJkIHtcXHJcXG4gICAgICAgIGZsZXg6IDE7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLypTd2l0Y2ggY29kZSBieTogaHR0cHM6Ly91aXZlcnNlLmlvL3ZpY3RvcnlhbWF5a2luL2Z1bm55LXJhYmJpdC0zMyovXFxyXFxuXFxyXFxuLnN3aXRjaCB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICB3aWR0aDogMTIwcHg7XFxyXFxuICAgIGhlaWdodDogMzRweDtcXHJcXG4gICAgcmlnaHQ6IDEwcHg7XFxyXFxuICAgIGJvdHRvbTogMTBweDtcXHJcXG4gICB9XFxyXFxuICAgXFxyXFxuICAgLnN3aXRjaCBpbnB1dCB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuICAgfVxcclxcbiAgIFxcclxcbiAgIC5zbGlkZXIge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdG9wOiAwO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICByaWdodDogMDtcXHJcXG4gICAgYm90dG9tOiAwO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0MzQzNDO1xcclxcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC40cztcXHJcXG4gICAgdHJhbnNpdGlvbjogLjRzO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAzNHB4O1xcclxcbiAgIH1cXHJcXG4gICBcXHJcXG4gICAuc2xpZGVyOmJlZm9yZSB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgY29udGVudDogXFxcIlxcXCI7XFxyXFxuICAgIGhlaWdodDogMjZweDtcXHJcXG4gICAgd2lkdGg6IDI2cHg7XFxyXFxuICAgIGxlZnQ6IDRweDtcXHJcXG4gICAgYm90dG9tOiA0cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC40cztcXHJcXG4gICAgdHJhbnNpdGlvbjogLjRzO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICAgfVxcclxcbiAgIFxcclxcbiAgIGlucHV0OmNoZWNrZWQgKyAuc2xpZGVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDU0NTtcXHJcXG4gICB9XFxyXFxuICAgXFxyXFxuICAgaW5wdXQ6Zm9jdXMgKyAuc2xpZGVyIHtcXHJcXG4gICAgYm94LXNoYWRvdzogMCAwIDFweCAjMjE5NkYzO1xcclxcbiAgIH1cXHJcXG4gICBcXHJcXG4gICBpbnB1dDpjaGVja2VkICsgLnNsaWRlcjpiZWZvcmUge1xcclxcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcXHJcXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDg1cHgpO1xcclxcbiAgIH1cXHJcXG4gICBcXHJcXG4gICAuc2xpZGVyOmFmdGVyIHtcXHJcXG4gICAgY29udGVudDogJ8KwQyc7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcXHJcXG4gICAgdG9wOiA1MCU7XFxyXFxuICAgIGxlZnQ6IDUwJTtcXHJcXG4gICAgZm9udC1zaXplOiAxMHB4O1xcclxcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgc2Fucy1zZXJpZjtcXHJcXG4gICB9XFxyXFxuICAgXFxyXFxuICAgaW5wdXQ6Y2hlY2tlZCArIC5zbGlkZXI6YWZ0ZXIge1xcclxcbiAgICBjb250ZW50OiAnwrBGJztcXHJcXG4gICB9XFxyXFxuXFxyXFxuXFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7OztBQUdBO0lBQ0ksT0FBTztBQUNYOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsOEJBQThCO0lBQzlCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLE9BQU87SUFDUCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLFlBQVk7SUFDWixRQUFRO0lBQ1Isa0JBQWtCO0lBQ2xCLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxPQUFPO0lBQ1Asc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLE9BQU87SUFDUCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2Qix3QkFBd0I7QUFDNUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGVBQWU7SUFDZixPQUFPO0FBQ1g7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksMENBQTBDO0lBQzFDLG1CQUFtQjtBQUN2Qjs7QUFFQTs7SUFFSTtRQUNJLG1CQUFtQjtRQUNuQiw2QkFBNkI7UUFDN0IsbUJBQW1CO0lBQ3ZCOztJQUVBO1FBQ0ksaUJBQWlCO1FBQ2pCLDZCQUE2QjtRQUM3Qix5QkFBeUI7SUFDN0I7O0lBRUE7UUFDSSxnQkFBZ0I7SUFDcEI7O0lBRUE7UUFDSSxpQkFBaUI7SUFDckI7O0lBRUE7UUFDSSxPQUFPO0lBQ1g7O0FBRUo7O0FBRUEsb0VBQW9FOztBQUVwRTtJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsWUFBWTtJQUNaLFlBQVk7SUFDWixXQUFXO0lBQ1gsWUFBWTtHQUNiOztHQUVBO0lBQ0MsYUFBYTtHQUNkOztHQUVBO0lBQ0Msa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixNQUFNO0lBQ04sT0FBTztJQUNQLFFBQVE7SUFDUixTQUFTO0lBQ1QseUJBQXlCO0lBQ3pCLHVCQUF1QjtJQUN2QixlQUFlO0lBQ2YsbUJBQW1CO0dBQ3BCOztHQUVBO0lBQ0Msa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osV0FBVztJQUNYLFNBQVM7SUFDVCxXQUFXO0lBQ1gsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2QixlQUFlO0lBQ2Ysa0JBQWtCO0dBQ25COztHQUVBO0lBQ0MseUJBQXlCO0dBQzFCOztHQUVBO0lBQ0MsMkJBQTJCO0dBQzVCOztHQUVBO0lBQ0MsbUNBQW1DO0lBQ25DLCtCQUErQjtJQUMvQiwyQkFBMkI7R0FDNUI7O0dBRUE7SUFDQyxhQUFhO0lBQ2IsWUFBWTtJQUNaLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsK0JBQStCO0lBQy9CLFFBQVE7SUFDUixTQUFTO0lBQ1QsZUFBZTtJQUNmLGdDQUFnQztHQUNqQzs7R0FFQTtJQUNDLGFBQWE7R0FDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwJyk7XFxyXFxuXFxyXFxuOnJvb3Qge1xcclxcbiAgICAtLXJvYm90bzogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxyXFxufVxcclxcblxcclxcbioge1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgICBmb250LWZhbWlseTogdmFyKC0tcm9ib3RvKTtcXHJcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgdHJhbnNpdGlvbjogMXM7XFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuI2RhdGEtZGlzcGxheSB7XFxyXFxuICAgIGZsZXg6IDU7XFxyXFxufVxcclxcblxcclxcbi5pY29uIHtcXHJcXG4gICAgaGVpZ2h0OiAyMHB4O1xcclxcbiAgICB3aWR0aDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuZm9ybSB7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAzJTtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiAzJTtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGJsYWNrO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbn1cXHJcXG5cXHJcXG5mb3JtIGJ1dHRvbiB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgICBib3JkZXI6IG5vbmU7XFxyXFxuICAgIGZsZXg6IDE7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXRbdHlwZT1cXFwic2VhcmNoXFxcIl17XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgICBib3JkZXI6IG5vbmU7XFxyXFxuICAgIGZsZXg6IDEwO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1yb2JvdG8pO1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dFt0eXBlPVxcXCJzZWFyY2hcXFwiXTpmb2N1cyB7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbm1haW4ge1xcclxcbiAgICBmbGV4OiA1O1xcclxcbiAgICBtYXJnaW46IG1pbigxMCUsIDUwcHgpO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG5oMSB7XFxyXFxuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG5oMiB7XFxyXFxuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbiN0ZW1wIHtcXHJcXG4gICAgZm9udC1zaXplOiB4eC1sYXJnZTtcXHJcXG59XFxyXFxuXFxyXFxuI2RhdGEtZGlzcGxheSB7XFxyXFxuICAgIGZsZXg6IDU7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGdhcDogbWluKDEwdncsIDUwcHgpO1xcclxcbn1cXHJcXG5cXHJcXG4jbWFpbi1pbWcge1xcclxcbiAgICB3aWR0aDogbWluKDEwMCUsIDI2MHB4KTtcXHJcXG4gICAgaGVpZ2h0OiBtaW4oMTAwJSwgMjYwcHgpO1xcclxcbn1cXHJcXG5cXHJcXG4ucm93IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXHJcXG4gICAgZ2FwOiAzJTtcXHJcXG59XFxyXFxuXFxyXFxuLmNhcmQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxyXFxuICAgIHBhZGRpbmc6IDZweDtcXHJcXG59XFxyXFxuXFxyXFxuLnVwcGVyLWNhcmQge1xcclxcbiAgICBmb250LXNpemU6IHgtc21hbGw7XFxyXFxufVxcclxcblxcclxcbi5sb3dlci1jYXJkIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluLCAuY2FyZCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcXHJcXG59XFxyXFxuXFxyXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NTBweCl7XFxyXFxuICAgIFxcclxcbiAgICAjZGF0YS1kaXNwbGF5IHtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgLnJvdyB7XFxyXFxuICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcXHJcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICAgICAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAudXBwZXItY2FyZCB7XFxyXFxuICAgICAgICBmb250LXNpemU6IHNtYWxsO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5sb3dlci1jYXJkIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5jYXJkIHtcXHJcXG4gICAgICAgIGZsZXg6IDE7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLypTd2l0Y2ggY29kZSBieTogaHR0cHM6Ly91aXZlcnNlLmlvL3ZpY3RvcnlhbWF5a2luL2Z1bm55LXJhYmJpdC0zMyovXFxyXFxuXFxyXFxuLnN3aXRjaCB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICB3aWR0aDogMTIwcHg7XFxyXFxuICAgIGhlaWdodDogMzRweDtcXHJcXG4gICAgcmlnaHQ6IDEwcHg7XFxyXFxuICAgIGJvdHRvbTogMTBweDtcXHJcXG4gICB9XFxyXFxuICAgXFxyXFxuICAgLnN3aXRjaCBpbnB1dCB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuICAgfVxcclxcbiAgIFxcclxcbiAgIC5zbGlkZXIge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdG9wOiAwO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICByaWdodDogMDtcXHJcXG4gICAgYm90dG9tOiAwO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0MzQzNDO1xcclxcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC40cztcXHJcXG4gICAgdHJhbnNpdGlvbjogLjRzO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAzNHB4O1xcclxcbiAgIH1cXHJcXG4gICBcXHJcXG4gICAuc2xpZGVyOmJlZm9yZSB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgY29udGVudDogXFxcIlxcXCI7XFxyXFxuICAgIGhlaWdodDogMjZweDtcXHJcXG4gICAgd2lkdGg6IDI2cHg7XFxyXFxuICAgIGxlZnQ6IDRweDtcXHJcXG4gICAgYm90dG9tOiA0cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC40cztcXHJcXG4gICAgdHJhbnNpdGlvbjogLjRzO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICAgfVxcclxcbiAgIFxcclxcbiAgIGlucHV0OmNoZWNrZWQgKyAuc2xpZGVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDU0NTtcXHJcXG4gICB9XFxyXFxuICAgXFxyXFxuICAgaW5wdXQ6Zm9jdXMgKyAuc2xpZGVyIHtcXHJcXG4gICAgYm94LXNoYWRvdzogMCAwIDFweCAjMjE5NkYzO1xcclxcbiAgIH1cXHJcXG4gICBcXHJcXG4gICBpbnB1dDpjaGVja2VkICsgLnNsaWRlcjpiZWZvcmUge1xcclxcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcXHJcXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDg1cHgpO1xcclxcbiAgIH1cXHJcXG4gICBcXHJcXG4gICAuc2xpZGVyOmFmdGVyIHtcXHJcXG4gICAgY29udGVudDogJ8KwQyc7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcXHJcXG4gICAgdG9wOiA1MCU7XFxyXFxuICAgIGxlZnQ6IDUwJTtcXHJcXG4gICAgZm9udC1zaXplOiAxMHB4O1xcclxcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgc2Fucy1zZXJpZjtcXHJcXG4gICB9XFxyXFxuICAgXFxyXFxuICAgaW5wdXQ6Y2hlY2tlZCArIC5zbGlkZXI6YWZ0ZXIge1xcclxcbiAgICBjb250ZW50OiAnwrBGJztcXHJcXG4gICB9XFxyXFxuXFxyXFxuXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVNlYXJjaFZhbHVlKHRleHQpIHtcclxuICAgIGxldCByZXN1bHQgPSB0ZXh0LnRyaW0oKTtcclxuICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKC9cXHMvZywgJysnKTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0VG9GKGNlbHNpdXMpIHtcclxuICAgIHJldHVybiBNYXRoLnJvdW5kKDEuOCAqIGNlbHNpdXMgKyAzMik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0VG9DKGZhcmVuaGVpdCkge1xyXG4gICAgcmV0dXJuIE1hdGgucm91bmQoKGZhcmVuaGVpdCAtIDMyKS8xLjgpO1xyXG59XHJcbiIsImltcG9ydCB7IHZhbGlkYXRlU2VhcmNoVmFsdWUsIGNvbnZlcnRUb0MsIGNvbnZlcnRUb0YgfSBmcm9tIFwiLi9oZWxwZXJcIjtcclxuXHJcbmltcG9ydCBjbGVhciBmcm9tICcuLi9pY29ucy9jbGVhci5zdmcnO1xyXG5pbXBvcnQgY2xvdWR5IGZyb20gJy4uL2ljb25zL2Nsb3VkeS5zdmcnO1xyXG5pbXBvcnQgcmFpbnkgZnJvbSAnLi4vaWNvbnMvcmFpbnkuc3ZnJztcclxuaW1wb3J0IHNub3d5IGZyb20gJy4uL2ljb25zL3Nub3d5LnN2Zyc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VhcmNoVmFsdWUoKSB7XHJcbiAgICBjb25zdCBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9XCJzZWFyY2hcIl0nKTtcclxuICAgIGxldCB2YWxpZGF0ZWRWYWx1ZSA9IHZhbGlkYXRlU2VhcmNoVmFsdWUoc2VhcmNoSW5wdXQudmFsdWUpO1xyXG4gICAgcmV0dXJuIHZhbGlkYXRlZFZhbHVlO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0VmFsdWVzKHdlYXRoZXJEYXRhKSB7XHJcblxyXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgIGNvbnN0IGNpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keSA+IG1haW4gPiBoMTpudGgtY2hpbGQoMSlcIik7XHJcbiAgICBjb25zdCBjb29yZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keSA+IG1haW4gPiBoMjpudGgtY2hpbGQoMilcIik7XHJcbiAgICBjb25zdCBpY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluLWltZ1wiKVxyXG4gICAgY29uc3QgdGVtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGVtcFwiKTtcclxuICAgIGNvbnN0IG1haW5XZWF0aGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHkgPiBtYWluID4gaDE6bnRoLWNoaWxkKDUpXCIpXHJcbiAgICBjb25zdCB3ZWF0aGVyRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keSA+IG1haW4gPiBoMjpudGgtY2hpbGQoNilcIilcclxuICAgIGNvbnN0IGZlZWxzTGlrZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGF0YS1kaXNwbGF5ID4gZGl2Om50aC1jaGlsZCgxKSA+IGRpdjpudGgtY2hpbGQoMSkgPiBkaXYubG93ZXItY2FyZFwiKTtcclxuICAgIGNvbnN0IG1pblRlbXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RhdGEtZGlzcGxheSA+IGRpdjpudGgtY2hpbGQoMSkgPiBkaXY6bnRoLWNoaWxkKDIpID4gZGl2Lmxvd2VyLWNhcmRcIik7XHJcbiAgICBjb25zdCBtYXhUZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkYXRhLWRpc3BsYXkgPiBkaXY6bnRoLWNoaWxkKDEpID4gZGl2Om50aC1jaGlsZCgzKSA+IGRpdi5sb3dlci1jYXJkXCIpO1xyXG4gICAgY29uc3QgY2xvdWRpbmVzcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGF0YS1kaXNwbGF5ID4gZGl2Om50aC1jaGlsZCgyKSA+IGRpdjpudGgtY2hpbGQoMSkgPiBkaXYubG93ZXItY2FyZFwiKTtcclxuICAgIGNvbnN0IHdpbmRTcGVlZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGF0YS1kaXNwbGF5ID4gZGl2Om50aC1jaGlsZCgyKSA+IGRpdjpudGgtY2hpbGQoMikgPiBkaXYubG93ZXItY2FyZFwiKTtcclxuICAgIGNvbnN0IHZpc2liaWxpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RhdGEtZGlzcGxheSA+IGRpdjpudGgtY2hpbGQoMikgPiBkaXY6bnRoLWNoaWxkKDMpID4gZGl2Lmxvd2VyLWNhcmRcIik7XHJcbiAgICBjb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGF0YS1kaXNwbGF5ID4gZGl2Om50aC1jaGlsZCgyKSA+IGRpdjpudGgtY2hpbGQoNCkgPiBkaXYubG93ZXItY2FyZFwiKTtcclxuXHJcbiAgICBjaXR5LnRleHRDb250ZW50ID0gYCR7d2VhdGhlckRhdGEubmFtZX0gLSAke3dlYXRoZXJEYXRhLnN5cy5jb3VudHJ5fWA7XHJcbiAgICBjb29yZHMudGV4dENvbnRlbnQgPSBgTG9uOiAke3dlYXRoZXJEYXRhLmNvb3JkLmxvbn3CsCBMYXQ6ICR7d2VhdGhlckRhdGEuY29vcmQubGF0fcKwYDtcclxuICAgIGxldCBpZCA9IHdlYXRoZXJEYXRhLndlYXRoZXJbMF0uaWQudG9TdHJpbmcoKTtcclxuICAgIGlmKGlkID09IDgwMCkge1xyXG4gICAgICAgIGljb24uc3JjID0gY2xlYXI7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJnYigyMTYsIDIzMywgMTQxKVwiO1xyXG4gICAgfSBlbHNlIGlmKGlkLnN0YXJ0c1dpdGgoJzYnKSl7XHJcbiAgICAgICAgaWNvbi5zcmMgPSBzbm93eTtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmdiKDIzOCwgMjM4LCAyMzgpXCI7XHJcbiAgICB9IGVsc2UgaWYoaWQuc3RhcnRzV2l0aCgnMicpIHx8IGlkLnN0YXJ0c1dpdGgoJzMnKSB8fCBpZC5zdGFydHNXaXRoKCc1Jykpe1xyXG4gICAgICAgIGljb24uc3JjID0gcmFpbnk7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJnYig0MiwgMzcsIDY2KVwiO1xyXG4gICAgfSBlbHNlIGlmKGlkLnN0YXJ0c1dpdGgoJzcnKSB8fCBpZC5zdGFydHNXaXRoKCc4MCcpKXtcclxuICAgICAgICBpY29uLnNyYyA9IGNsb3VkeTtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmdiKDE1MiwgMTUwLCAxNjYpXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFsZXJ0KCdTb21ldGhpbmcgd2VudCB3cm9uZy4gUGxlYXNlIHRyeSBhZ2Fpbi4nKTtcclxuICAgIH1cclxuICAgIHRlbXAudGV4dENvbnRlbnQgPSBgJHtNYXRoLnJvdW5kKHdlYXRoZXJEYXRhLm1haW4udGVtcCl9wrBDYDtcclxuICAgIG1haW5XZWF0aGVyLnRleHRDb250ZW50ID0gd2VhdGhlckRhdGEud2VhdGhlclswXS5tYWluO1xyXG4gICAgd2VhdGhlckRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gd2VhdGhlckRhdGEud2VhdGhlclswXS5kZXNjcmlwdGlvbjtcclxuICAgIGZlZWxzTGlrZS50ZXh0Q29udGVudCA9IGAke01hdGgucm91bmQod2VhdGhlckRhdGEubWFpbi5mZWVsc19saWtlKX3CsENgO1xyXG4gICAgbWluVGVtcC50ZXh0Q29udGVudCA9IGAke01hdGgucm91bmQod2VhdGhlckRhdGEubWFpbi50ZW1wX21pbil9wrBDYDtcclxuICAgIG1heFRlbXAudGV4dENvbnRlbnQgPSBgJHtNYXRoLnJvdW5kKHdlYXRoZXJEYXRhLm1haW4udGVtcF9tYXgpfcKwQ2A7XHJcbiAgICBjbG91ZGluZXNzLnRleHRDb250ZW50ID0gYCR7d2VhdGhlckRhdGEuY2xvdWRzLmFsbH0lYDtcclxuICAgIHdpbmRTcGVlZC50ZXh0Q29udGVudCA9IGAke3dlYXRoZXJEYXRhLndpbmQuc3BlZWR9bS9zZWNgO1xyXG4gICAgdmlzaWJpbGl0eS50ZXh0Q29udGVudCA9IGAke3dlYXRoZXJEYXRhLnZpc2liaWxpdHl9bWA7XHJcbiAgICBodW1pZGl0eS50ZXh0Q29udGVudCA9IGAke3dlYXRoZXJEYXRhLm1haW4uaHVtaWRpdHl9JWA7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VVbml0cyhzZXRUb0ZhcmVuaGVpdCkge1xyXG5cclxuICAgIGNvbnN0IHRlbXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RlbXBcIik7XHJcbiAgICBjb25zdCBmZWVsc0xpa2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RhdGEtZGlzcGxheSA+IGRpdjpudGgtY2hpbGQoMSkgPiBkaXY6bnRoLWNoaWxkKDEpID4gZGl2Lmxvd2VyLWNhcmRcIik7XHJcbiAgICBjb25zdCBtaW5UZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkYXRhLWRpc3BsYXkgPiBkaXY6bnRoLWNoaWxkKDEpID4gZGl2Om50aC1jaGlsZCgyKSA+IGRpdi5sb3dlci1jYXJkXCIpO1xyXG4gICAgY29uc3QgbWF4VGVtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGF0YS1kaXNwbGF5ID4gZGl2Om50aC1jaGlsZCgxKSA+IGRpdjpudGgtY2hpbGQoMykgPiBkaXYubG93ZXItY2FyZFwiKTtcclxuICAgIGlmIChzZXRUb0ZhcmVuaGVpdCkge1xyXG4gICAgICAgIGxldCB0ZW1wVmFsdWUgPSArdGVtcC50ZXh0Q29udGVudC5yZXBsYWNlKCfCsEMnLCAnJyk7XHJcbiAgICAgICAgbGV0IGZlZWxzTGlrZVZhbHVlID0gK2ZlZWxzTGlrZS50ZXh0Q29udGVudC5yZXBsYWNlKCfCsEMnLCAnJyk7XHJcbiAgICAgICAgbGV0IG1pblRlbXBWYWx1ZSA9ICttaW5UZW1wLnRleHRDb250ZW50LnJlcGxhY2UoJ8KwQycsICcnKTtcclxuICAgICAgICBsZXQgbWF4VGVtcFZhbHVlID0gK21heFRlbXAudGV4dENvbnRlbnQucmVwbGFjZSgnwrBDJywgJycpO1xyXG4gICAgICAgIGlmKGlzTmFOKHRlbXBWYWx1ZSkgfHwgaXNOYU4oZmVlbHNMaWtlVmFsdWUpIHx8IGlzTmFOKG1pblRlbXBWYWx1ZSkgfHwgaXNOYU4obWF4VGVtcFZhbHVlKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRlbXBWYWx1ZSA9IGNvbnZlcnRUb0YodGVtcFZhbHVlKTtcclxuICAgICAgICBmZWVsc0xpa2VWYWx1ZSA9IGNvbnZlcnRUb0YoZmVlbHNMaWtlVmFsdWUpO1xyXG4gICAgICAgIG1pblRlbXBWYWx1ZSA9IGNvbnZlcnRUb0YobWluVGVtcFZhbHVlKTtcclxuICAgICAgICBtYXhUZW1wVmFsdWUgPSBjb252ZXJ0VG9GKG1heFRlbXBWYWx1ZSk7XHJcbiAgICAgICAgdGVtcC50ZXh0Q29udGVudCA9IGAke3RlbXBWYWx1ZX3CsEZgO1xyXG4gICAgICAgIGZlZWxzTGlrZS50ZXh0Q29udGVudCA9IGAke2ZlZWxzTGlrZVZhbHVlfcKwRmA7XHJcbiAgICAgICAgbWluVGVtcC50ZXh0Q29udGVudCA9IGAke21pblRlbXBWYWx1ZX3CsEZgO1xyXG4gICAgICAgIG1heFRlbXAudGV4dENvbnRlbnQgPSBgJHttYXhUZW1wVmFsdWV9wrBGYDtcclxuICAgICAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImFhYVwiKTtcclxuICAgICAgICBsZXQgdGVtcFZhbHVlID0gK3RlbXAudGV4dENvbnRlbnQucmVwbGFjZSgnwrBGJywgJycpO1xyXG4gICAgICAgIGxldCBmZWVsc0xpa2VWYWx1ZSA9ICtmZWVsc0xpa2UudGV4dENvbnRlbnQucmVwbGFjZSgnwrBGJywgJycpO1xyXG4gICAgICAgIGxldCBtaW5UZW1wVmFsdWUgPSArbWluVGVtcC50ZXh0Q29udGVudC5yZXBsYWNlKCfCsEYnLCAnJyk7XHJcbiAgICAgICAgbGV0IG1heFRlbXBWYWx1ZSA9ICttYXhUZW1wLnRleHRDb250ZW50LnJlcGxhY2UoJ8KwRicsICcnKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImFhYVwiKTtcclxuICAgICAgICBpZihpc05hTih0ZW1wVmFsdWUpIHx8IGlzTmFOKGZlZWxzTGlrZVZhbHVlKSB8fCBpc05hTihtaW5UZW1wVmFsdWUpIHx8IGlzTmFOKG1heFRlbXBWYWx1ZSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0ZW1wVmFsdWUgPSBjb252ZXJ0VG9DKHRlbXBWYWx1ZSk7XHJcbiAgICAgICAgZmVlbHNMaWtlVmFsdWUgPSBjb252ZXJ0VG9DKGZlZWxzTGlrZVZhbHVlKTtcclxuICAgICAgICBtaW5UZW1wVmFsdWUgPSBjb252ZXJ0VG9DKG1pblRlbXBWYWx1ZSk7XHJcbiAgICAgICAgbWF4VGVtcFZhbHVlID0gY29udmVydFRvQyhtYXhUZW1wVmFsdWUpO1xyXG4gICAgICAgIHRlbXAudGV4dENvbnRlbnQgPSBgJHt0ZW1wVmFsdWV9wrBDYDtcclxuICAgICAgICBmZWVsc0xpa2UudGV4dENvbnRlbnQgPSBgJHtmZWVsc0xpa2VWYWx1ZX3CsENgO1xyXG4gICAgICAgIG1pblRlbXAudGV4dENvbnRlbnQgPSBgJHttaW5UZW1wVmFsdWV9wrBDYDtcclxuICAgICAgICBtYXhUZW1wLnRleHRDb250ZW50ID0gYCR7bWF4VGVtcFZhbHVlfcKwQ2A7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0RmF2aWNvbigpIHtcclxuICAgIGxldCBoZWFkVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkJyk7XHJcbiAgICBsZXQgc2V0RmF2aWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcclxuICAgIHNldEZhdmljb24uc2V0QXR0cmlidXRlKCdyZWwnLCdzaG9ydGN1dCBpY29uJyk7XHJcbiAgICBzZXRGYXZpY29uLnNldEF0dHJpYnV0ZSgnaHJlZicsIGNsZWFyKTtcclxuICAgIGhlYWRUaXRsZS5hcHBlbmRDaGlsZChzZXRGYXZpY29uKTtcclxufSIsImltcG9ydCBzZWFyY2hJY29uIGZyb20gJy4uL2ljb25zL3NlYXJjaC5zdmcnO1xyXG5pbXBvcnQgY2xlYXIgZnJvbSAnLi4vaWNvbnMvY2xlYXIuc3ZnJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJVSSgpIHtcclxuICBcclxuICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xyXG4gIGJvZHkuaW5uZXJIVE1MID0gYFxyXG4gIDxoZWFkZXI+XHJcbiAgICA8Zm9ybSBhY3Rpb24+XHJcbiAgICA8aW5wdXQgdHlwZT1cInNlYXJjaFwiIG5hbWU9XCJzZWFyY2hcIiBwbGFjZWhvbGRlcj1cIlNlYXJjaCBmb3IgYSBjaXR5Li4uXCI+XHJcbiAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIj48aW1nIGNsYXNzPVwiaWNvblwiIHNyYz1cIiR7c2VhcmNoSWNvbn1cIiBhbHQ9XCJTZWFyY2ggSWNvblwiPjwvYnV0dG9uPlxyXG4gICAgPC9mb3JtPlxyXG4gIDwvaGVhZGVyPlxyXG4gIDxtYWluPlxyXG4gICAgPGgxPlNFTEVDVCBBIENJVFk8L2gxPlxyXG4gICAgPGgyPkxvbjotIExhdDotIDwvaDI+IFxyXG4gICAgPGltZyBpZD1cIm1haW4taW1nXCIgc3JjPVwiJHtjbGVhcn1cIiBhbHQ9XCJDbGVhciBJY29uXCI+XHJcbiAgICA8aDEgaWQ9XCJ0ZW1wXCI+LTwvaDE+XHJcbiAgICA8aDE+LTwvaDE+XHJcbiAgICA8aDI+LTwvaDI+XHJcbiAgPC9tYWluPlxyXG4gIDxkaXYgaWQ9XCJkYXRhLWRpc3BsYXlcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwidXBwZXItY2FyZFwiPkZlZWxzIExpa2U8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibG93ZXItY2FyZFwiPi08L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInVwcGVyLWNhcmRcIj5NaW4gVGVtcDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJsb3dlci1jYXJkXCI+LTwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwidXBwZXItY2FyZFwiPk1heCBUZW1wPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxvd2VyLWNhcmRcIj4tPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwicm93XCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInVwcGVyLWNhcmRcIj5DbG91ZGluZXNzPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxvd2VyLWNhcmRcIj4tPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ1cHBlci1jYXJkXCI+V2luZCBTcGVlZDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJsb3dlci1jYXJkXCI+LTwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwidXBwZXItY2FyZFwiPlZpc2liaWxpdHk8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibG93ZXItY2FyZFwiPi08L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInVwcGVyLWNhcmRcIj5IdW1pZGl0eTwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJsb3dlci1jYXJkXCI+LTwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG5cclxuPGxhYmVsIGNsYXNzPVwic3dpdGNoXCI+XHJcbiAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiPlxyXG4gIDxzcGFuIGNsYXNzPVwic2xpZGVyXCI+PC9zcGFuPlxyXG48L2xhYmVsPlxyXG4gIGA7XHJcblxyXG59XHJcbiIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xyXG5cclxuaW1wb3J0IHsgcmVuZGVyVUkgfSBmcm9tICcuL3NjcmlwdHMvVUkuanMnO1xyXG5pbXBvcnQgeyBnZXRTZWFyY2hWYWx1ZSwgc2V0VmFsdWVzLCBjaGFuZ2VVbml0cywgc2V0RmF2aWNvbiB9IGZyb20gJy4vc2NyaXB0cy9ET01NYW5pcHVsYXRpb24nO1xyXG5pbXBvcnQgeyBnZXREYXRhIH0gZnJvbSAnLi9zY3JpcHRzL0FQSSc7XHJcblxyXG5yZW5kZXJVSSgpO1xyXG5cclxuY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5ID4gaGVhZGVyID4gZm9ybVwiKTtcclxuZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7IFxyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICBsZXQgdmFsdWUgPSBnZXRTZWFyY2hWYWx1ZSgpO1xyXG4gIGxldCB3ZWF0aGVyRGF0YSA9IGdldERhdGEodmFsdWUpLnRoZW4ocmVzb2x2ZSA9PiB7XHJcbiAgICBzZXRWYWx1ZXMocmVzb2x2ZSk7XHJcbiAgICBjaGFuZ2VVbml0cyh0b2dnbGVTd2l0Y2guY2hlY2tlZCk7XHJcbiAgfSwgcmVqZWN0ID0+IGNvbnNvbGUubG9nKFwiRXJyb3I6XCIsIHJlamVjdCkpO1xyXG59KTtcclxuXHJcbmNvbnN0IHRvZ2dsZVN3aXRjaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5ID4gbGFiZWwgPiBpbnB1dFt0eXBlPWNoZWNrYm94XVwiKTtcclxuXHJcbnRvZ2dsZVN3aXRjaC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKHRvZ2dsZVN3aXRjaC5jaGVja2VkKVxyXG4gIGNoYW5nZVVuaXRzKHRvZ2dsZVN3aXRjaC5jaGVja2VkKTtcclxufSk7XHJcblxyXG5zZXRGYXZpY29uKCk7XHJcblxyXG4iLCJmdW5jdGlvbiBidWlsZFJlcXVlc3RVUkwoY2l0eU5hbWUpIHtcclxuICAgIHJldHVybiBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHlOYW1lfSZBUFBJRD0yMGY3NjMyZmZjMmMwMjI2NTRlNDA5M2M2OTQ3YjRmNCZ1bml0cz1tZXRyaWNgO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RGF0YShjaXR5TmFtZSl7XHJcbiAgICBjb25zdCB1cmwgPSBidWlsZFJlcXVlc3RVUkwoY2l0eU5hbWUpO1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xyXG4gICAgaWYocmVzcG9uc2Uub2spIHtcclxuICAgICAgICBjb25zdCB3ZWF0aGVyRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICByZXR1cm4gd2VhdGhlckRhdGE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFsZXJ0KFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB5b3VyIHJlcXVlc3QuIFBsZWFzZSB0cnkgYWdhaW4uXCIpO1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJyZXBsYWNlIiwicCIsIm5jIiwiY29udmVydFRvRiIsImNlbHNpdXMiLCJNYXRoIiwicm91bmQiLCJjb252ZXJ0VG9DIiwiZmFyZW5oZWl0IiwiY2hhbmdlVW5pdHMiLCJzZXRUb0ZhcmVuaGVpdCIsInRlbXAiLCJmZWVsc0xpa2UiLCJtaW5UZW1wIiwibWF4VGVtcCIsInRlbXBWYWx1ZSIsInRleHRDb250ZW50IiwiZmVlbHNMaWtlVmFsdWUiLCJtaW5UZW1wVmFsdWUiLCJtYXhUZW1wVmFsdWUiLCJpc05hTiIsImNvbnNvbGUiLCJsb2ciLCJpbm5lckhUTUwiLCJhZGRFdmVudExpc3RlbmVyIiwicHJldmVudERlZmF1bHQiLCJhc3luYyIsImNpdHlOYW1lIiwidXJsIiwiYnVpbGRSZXF1ZXN0VVJMIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwianNvbiIsImFsZXJ0IiwiZ2V0RGF0YSIsInRleHQiLCJ2YWx1ZSIsInRyaW0iLCJ2YWxpZGF0ZVNlYXJjaFZhbHVlIiwidGhlbiIsInJlc29sdmUiLCJ3ZWF0aGVyRGF0YSIsImNpdHkiLCJjb29yZHMiLCJpY29uIiwibWFpbldlYXRoZXIiLCJ3ZWF0aGVyRGVzY3JpcHRpb24iLCJjbG91ZGluZXNzIiwid2luZFNwZWVkIiwidmlzaWJpbGl0eSIsImh1bWlkaXR5IiwibmFtZSIsInN5cyIsImNvdW50cnkiLCJjb29yZCIsImxvbiIsImxhdCIsIndlYXRoZXIiLCJib2R5IiwiYmFja2dyb3VuZENvbG9yIiwic3RhcnRzV2l0aCIsIm1haW4iLCJkZXNjcmlwdGlvbiIsImZlZWxzX2xpa2UiLCJ0ZW1wX21pbiIsInRlbXBfbWF4IiwiY2xvdWRzIiwiYWxsIiwid2luZCIsInNwZWVkIiwic2V0VmFsdWVzIiwidG9nZ2xlU3dpdGNoIiwiY2hlY2tlZCIsInJlamVjdCIsImhlYWRUaXRsZSIsInNldEZhdmljb24iXSwic291cmNlUm9vdCI6IiJ9